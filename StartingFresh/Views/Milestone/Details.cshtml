@model StartingFresh.Models.MilestoneModel

@{
    ViewBag.Title = "Details";
    ViewBag.Message = "Milestone Details";

}

<h2>Details</h2>

@{ var color = "";}

@{ /* Calculate the amount of days remaining */ 
    var today = DateTime.Now;
    var todayDate = DateTime.Now;
    var range = Model.EndDate - todayDate;
    var daysRemaining = range.Days+1;
    if (daysRemaining <= 0)
    {
        daysRemaining = 0;
    }
}


<div>
    <h4>@Html.DisplayFor(model => model.Description) </h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            ID Number
        </dt>

        <dd>
            @Html.DisplayFor(model => model.MilestoneId)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.StartTime)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.StartTimeString)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.EndDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.EndDateString)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.TotalProjectDays)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TotalProjectDays)
        </dd>

        <dt>
            Days Remaining
        </dt>

        <dd>
            <b>@daysRemaining</b>
        </dd>

        <dt>
            Percent Complete
        </dt>

        <dd>
            @{
                /* Percent completed = (Todays Date - Start Date) / Total Project Days */
                var top = today - @Model.StartTime;

                var topDays = top.Days + 1;

                var bottom = @Model.TotalProjectDays;

                var ans = (double) topDays/bottom*100;
                var percent = Math.Round(ans, 2);

            }

            @if (today.DayOfYear == Model.StartTime.DayOfYear)
            {
                percent = 0;
            }

            @if (bottom == 0)
            {
                percent = 100;
            }
            
            @if (percent > 100) {
                percent = 100;
            }

            @percent%
            @if ((percent) > 0 && (percent <= 25))
            {
                color = "progress-bar-success";
            }

            else if ((percent > 25) && (percent <= 50))
            {
                color = "progress-bar-info";

            }
            else if ((percent > 50) && (percent <= 75))
            {
                color = "progress-bar-warning";
            }

            else if ((percent > 75) && (percent <= 100))
            {
                color = "progress-bar-danger";
            }
            else
            {
                color = "progress-bar-danger";
            }

            <div class="progress">
                <div class="progress-bar @color progress-bar-striped" role="progressbar"
                     aria-valuenow="50" aria-valuemin="0" aria-valuemax="100" style="width: @percent%">
                </div>
            </div>
        </dd>
    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.MilestoneId }) |
    @Html.ActionLink("Back to List", "Index")
</p>
